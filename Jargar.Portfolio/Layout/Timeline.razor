<h3>Timeline</h3>
<MudGrid>
    <MudItem xs="12" sm="5">
        <MudSelect T="TimelineOrientation" ValueChanged="OnOrientationChange" Label="TimelineOrientation" Dense="true" Variant="Variant.Outlined">
            <MudSelectItem T="TimelineOrientation" Value="TimelineOrientation.Vertical">Vertical</MudSelectItem>
            <MudSelectItem T="TimelineOrientation" Value="TimelineOrientation.Horizontal">Horizontal</MudSelectItem>
        </MudSelect>
    </MudItem>
    <MudItem xs="12" sm="5">
        <MudSelect T="TimelinePosition" @bind-Value="@_position" Label="TimelinePosition" Dense="true" Variant="Variant.Outlined">
            @if (_orientation == TimelineOrientation.Vertical)
            {
                <MudSelectItem T="TimelinePosition" Value="TimelinePosition.Left">Left</MudSelectItem>
                <MudSelectItem T="TimelinePosition" Value="TimelinePosition.Alternate">Alternate</MudSelectItem>
                <MudSelectItem T="TimelinePosition" Value="TimelinePosition.Right">Right</MudSelectItem>
            }
            else if (_orientation == TimelineOrientation.Horizontal)
            {
                <MudSelectItem T="TimelinePosition" Value="TimelinePosition.Top">Top</MudSelectItem>
                <MudSelectItem T="TimelinePosition" Value="TimelinePosition.Alternate">Alternate</MudSelectItem>
                <MudSelectItem T="TimelinePosition" Value="TimelinePosition.Bottom">Bottom</MudSelectItem>
            }
        </MudSelect>
    </MudItem>
    <MudItem xs="12" sm="2">
        <MudSwitch Label="Reverse" @bind-Value="@_reverse" Disabled="IsSwitchDisabled()" Color="Color.Primary" />
    </MudItem>
</MudGrid>

<MudTimeline TimelineOrientation="_orientation" TimelinePosition="_position" Reverse="_reverse">

    <MudTimelineItem Color="Color.Success" Variant="Variant.Filled">

        <ItemDot>
            <MudIcon Icon="@Icons.Material.Filled.Cake" />
        </ItemDot>
        <ItemContent>
            <MudCard>
                <MudCardContent>
                    <MudText>
                        Born
                    </MudText>
                </MudCardContent>
            </MudCard>
        </ItemContent>
        <ItemOpposite>
            <MudText Color="Color.Success">1994</MudText>
        </ItemOpposite>
    </MudTimelineItem>


    <MudTimelineItem Color="Color.Success" Variant="Variant.Filled">

        <ItemDot>
            <MudIcon Icon="@Icons.Material.Filled.School" />
        </ItemDot>
        <ItemContent>
            <MudCard>
                <MudCardContent>
                    <MudText>
                        Microsoft Certified: Azure Fundamentals, AZ-900
                    </MudText>
                </MudCardContent>
                <MudCardActions>
                    <MudButton Href="https://learn.microsoft.com/api/credentials/share/en-us/OscarJrgren-1799/DEB777EC276838D8?sharingId=12085D3303F0931A" Variant="Variant.Text" Color="Color.Primary">View Cert</MudButton>
                </MudCardActions>
            </MudCard>
        </ItemContent>
        <ItemOpposite>
            <MudText Color="Color.Success">2023</MudText>
        </ItemOpposite>
    </MudTimelineItem>

    <MudTimelineItem Color="Color.Success" Variant="Variant.Filled">
        <ItemContent>
            <MudCard>
                <MudCardContent>
                    <MudText>Story of the day</MudText>
                    <MudText Typo="Typo.body2">The quick, brown fox jumps over a lazy dog.</MudText>
                </MudCardContent>
                <MudCardActions>
                    <MudButton Variant="Variant.Text" Color="Color.Primary">Learn More</MudButton>
                </MudCardActions>
            </MudCard>
        </ItemContent>
        <ItemOpposite>
            <MudText Color="Color.Success">TEAAODWAODKWAO</MudText>
        </ItemOpposite>
    </MudTimelineItem>


</MudTimeline>


@* @foreach (var timeItem in timeLineItems)
{

    <MudTimelineItem Color="Color.Success" Variant="Variant.Filled">
        <ItemContent>
            <MudCard>
                <MudCardContent>
                    <MudText>Story of the day</MudText>
                    <MudText Typo="Typo.body2">The quick, brown fox jumps over a lazy dog.</MudText>
                </MudCardContent>
                <MudCardActions>
                    <MudButton Variant="Variant.Text" Color="Color.Primary">Learn More</MudButton>
                </MudCardActions>
            </MudCard>
        </ItemContent>
        <ItemOpposite>
            <MudText Color="Color.Success">@timeItem.Value</MudText>
        </ItemOpposite>
    </MudTimelineItem>
}
 *@


@* <MudTimelineItem Color="Color.Success" Variant="Variant.Filled">
    <ItemContent>
        <MudAlert Severity="Severity.Success">The reactor is running at optimum temperature</MudAlert>
    </ItemContent>
    <ItemOpposite>
        <MudText Color="Color.Success">13:37</MudText>
    </ItemOpposite>
</MudTimelineItem>
<MudTimelineItem Color="Color.Warning" Variant="Variant.Filled">
    <ItemContent>
        <MudAlert Severity="Severity.Warning">The reactor temperature exceeds the optimal range</MudAlert>
    </ItemContent>
    <ItemOpposite>
        <MudText Color="Color.Warning">14:08</MudText>
    </ItemOpposite>
</MudTimelineItem>
<MudTimelineItem Color="Color.Error" Variant="Variant.Filled">
    <ItemContent>
        <MudAlert Severity="Severity.Error">Meltdown is imminent</MudAlert>
    </ItemContent>
    <ItemOpposite>
        <MudText Color="Color.Error">15:00</MudText>
    </ItemOpposite>
</MudTimelineItem> *@

@code {
    private TimelinePosition _position { get; set; } = TimelinePosition.Alternate;
    private TimelineOrientation _orientation { get; set; } = TimelineOrientation.Vertical;
    private bool _reverse { get; set; }

    private Dictionary<string, string> timeLineItems = new()
    {
         {"Tests Texts","2023/05/02" },
         {"Tessst","2023/05/02" },
         {"Tes22st Textsss","2023/05/02" },
         {"Te33st","2023/05/02" }

    };

    private TimeLineItem[] items = new TimeLineItem[]
           {
            new TimeLineItem
            {
                Title = "First Item",
                Text = "This is the first item",
                Icon = "icon1"
            },
            new TimeLineItem
            {
                Title = "Second Item",
                Text = "This is the second item",
                Icon = "icon2"
            },
               // Add more items as needed
           };

    public record TimeLineItem
    {
        public string Title { get; set; }

        public string Text { get; set; }

        public string Icon { get; set; }
    }

    const string cube = @"<svg style=""width:24px;height:24px"" viewBox=""0 0 24 24"">
      <path d=""M32 2C25.3726 2 20 7.37258 20 14V24C20 28.4183 16.4183 32 12 32C7.58172 32 4 28.4183 4 24C4 19.5817 7.58172 16 12 16H16C16 7.16344 23.1634 0 32 0C40.8366 0 48 7.16344 48 16H52C56.4183 16 60 19.5817 60 24C60 28.4183 56.4183 32 52 32C47.5817 32 44 28.4183 44 24V14C44 7.37258 38.6274 2 32 2ZM32 34C25.9249 34 20.4013 36.7454 16.6875 41.3125L15.3125 42.6875C11.7454 46.4013 9 51.9249 9 58C9 59.1046 9.89543 60 11 60H53C54.1046 60 55 59.1046 55 58C55 51.9249 52.2546 46.4013 48.6875 42.6875L47.3125 41.3125C43.5987 36.7454 38.0751 34 32 34ZM32 36C37.525 36 42.3671 38.5148 45.8125 42.1875L47.1875 43.5625C50.7627 47.1377 53 52.2055 53 57.5H11C11 52.2055 13.2373 47.1377 16.8125 43.5625L18.1875 42.1875C21.6329 38.5148 26.475 36 32 36ZM22 56C23.1046 56 24 55.1046 24 54C24 52.8954 23.1046 52 22 52C20.8954 52 20 52.8954 20 54C20 55.1046 20"" />
</svg>";



    private void OnOrientationChange(TimelineOrientation value)
    {
        _orientation = value;
        switch (value)
        {
            case TimelineOrientation.Vertical:
                if (_position is TimelinePosition.Top or TimelinePosition.Bottom)
                {
                    _position = TimelinePosition.Start;
                }
                break;
            case TimelineOrientation.Horizontal:
                if (_position is TimelinePosition.Start or TimelinePosition.Left or TimelinePosition.Right or TimelinePosition.End)
                {
                    _position = TimelinePosition.Top;
                }
                break;
        }
    }

    bool IsSwitchDisabled()
    {
        if (_position == TimelinePosition.Alternate)
            return false;
        else
            _reverse = false;
        return true;
    }
}